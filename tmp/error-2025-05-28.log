{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:22:29.114Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:23:37.607Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:26:26.319Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:27:15.223Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:27:46.851Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:28:06.889Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'dibuat_oleh')","timestamp":"2025-05-28T07:28:33.380Z"}
{"level":"error","message":"Cannot access 'result' before initialization","timestamp":"2025-05-28T07:36:08.423Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","target":"kategoriBarang.count","timestamp":"2025-05-28T07:39:51.730Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","timestamp":"2025-05-28T07:39:51.731Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","target":"kategoriBarang.count","timestamp":"2025-05-28T07:44:13.739Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","timestamp":"2025-05-28T07:44:13.740Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","target":"kategoriBarang.count","timestamp":"2025-05-28T07:46:16.247Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","timestamp":"2025-05-28T07:46:16.247Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","target":"kategoriBarang.count","timestamp":"2025-05-28T07:46:48.514Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","timestamp":"2025-05-28T07:46:48.515Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","target":"kategoriBarang.count","timestamp":"2025-05-28T07:46:49.882Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.count()` invocation:\n\n\nThe table `kategoribarang` does not exist in the current database.","timestamp":"2025-05-28T07:46:49.883Z"}
{"level":"error","message":"Invalid status code: undefined. Status code must be an integer.","timestamp":"2025-05-28T12:14:26.244Z"}
{"level":"error","message":"Invalid status code: undefined. Status code must be an integer.","timestamp":"2025-05-28T12:15:06.415Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:15:58.273Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:15:59.171Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:15:59.719Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:16:49.160Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:16:50.104Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:16:51.407Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:17:15.260Z"}
{"level":"error","message":"Failed to lookup view \"daftar\" in views directory \"public\\views\"","timestamp":"2025-05-28T12:17:17.813Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'end')","timestamp":"2025-05-28T12:17:30.786Z"}
{"level":"error","message":"D:\\kerja\\freelance\\aryando\\kasir\\app\\public\\views\\daftar.ejs:104\n    102|                 </div>\r\n    103|                 <h4 class=\"text-center font-medium mb-4\">\r\n >> 104|                   Sign up <%= data %>\r\n    105|                 </h4>\r\n    106|                 <div class=\"grid grid-cols-12 gap-3 mb-3\">\r\n    107|                   <div class=\"col-span-12 sm:col-span-6\">\r\n\ndata is not defined","timestamp":"2025-05-28T12:21:23.960Z"}
{"level":"error","message":"Failed to lookup view \"login\" in views directory \"public\\views\"","timestamp":"2025-05-28T15:14:19.715Z"}
{"level":"error","message":"res.setCookie is not a function","timestamp":"2025-05-28T15:25:09.890Z"}
{"level":"error","message":"res.setCookie is not a function","timestamp":"2025-05-28T15:25:19.263Z"}
{"level":"error","message":"Cannot access 'kategoriBarang' before initialization","timestamp":"2025-05-29T03:27:12.046Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:23.001Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:23.002Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:47.621Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:47.622Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:48.516Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:48.517Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:49.507Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:49.508Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:50.904Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:50.905Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:51.459Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:51.460Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:27:51.876Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: {\n    ~~~~~~~~\n      id: undefined\n    },\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:27:51.876Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: true,\n    ~~~~~~~~\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","target":"kategoriBarang.findMany","timestamp":"2025-05-29T03:30:54.352Z"}
{"level":"error","message":"\nInvalid `prisma.kategoriBarang.findMany()` invocation:\n\n{\n  where: {\n    nama: {\n      contains: \"a\"\n    }\n  },\n  include: {\n    pengguna: true,\n    ~~~~~~~~\n?   pembuat?: true,\n?   barang?: true\n  }\n}\n\nUnknown field `pengguna` for include statement on model `KategoriBarang`. Available options are marked with ?.","timestamp":"2025-05-29T03:30:54.353Z"}
